#–∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
import time
import random
import sqlite3
import tempfile
import telebot
import requests
from inspect import getfile
from pathlib import Path
from cgitb import text
from tokenize import Token
from telebot import types
#—Ç–æ–∫–µ–Ω
TOKEN = '–í–∞—à —Ç–æ–∫–µ–Ω'
URL = 'https://api.telegram.org/bot'
bot = telebot.TeleBot(TOKEN)
#—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤ –ë–î 
@bot.message_handler(content_types=["photo"])
def send_help_text(message):
    photo_id = message.photo[-1].file_id
    photo_file = bot.get_file(photo_id)
    photo_bytes = (photo_file.file_path) 
    

    connect = sqlite3.connect('dz.db')
    cursor = connect.cursor()

    cursor.execute("""CREATE TABLE IF NOT EXISTS dz_id(
            id INTEGER
    )""")    

    connect.commit()

    cursor.execute("INSERT INTO dz_id(id) VALUES(?)",[photo_id])
    bot.send_message(message.chat.id, "–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
    connect.commit()

#–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
@bot.message_handler(commands=['start'])
def start(message):
    

    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()

    cursor.execute("""CREATE TABLE IF NOT EXISTS login_id(
            id TEXT
    )""")    

    connect.commit()

    people_id =  message.chat.id
    cursor.execute(f"SELECT id FROM login_id WHERE id = {people_id}")   
    data = cursor.fetchone()            
    if data is None:
        users_list = [message.chat.id]
        cursor.execute("INSERT INTO login_id VALUES(?);", users_list)
        connect.commit()  
#–∫–Ω–æ–ø–∫–∏ –∫–æ–º–º–∞–Ω–¥—ã /start
    markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
    item1 = types.KeyboardButton("–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤")
    item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∑")
    item3 = types.KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –¥–∑")
    item4 = types.KeyboardButton("–ò–Ω—Ñ–∞ü§ñ")
        
    markup.add(item1,item2, item3, item4)

    bot.send_message(message.chat.id, '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–µ–Ω—å–∫–æ, –Ω–µ –ø—Ä–∞–≤–¥–∞ –ª–∏, {0.first_name}?'.format(message.from_user), reply_markup=markup)
#—Ñ—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Ä–∞–Ω–¥–æ–º
@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤':
            bot.send_message(message.chat.id, '–í–∞—à–µ —á–∏—Å–ª–æ:' + str(random.randint(0, 1000)))
#—Ñ—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –∏–Ω—Ñ–∞
        elif message.text == '–ò–Ω—Ñ–∞ü§ñ':
                markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
                item1 = types.KeyboardButton("–û –±–æ—Ç–µ")
                item2 = types.KeyboardButton("–ß—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ?")
                back= types.KeyboardButton("–ù–∞–∑–∞–¥")
                markup.add(item1, item2, back)

                bot.send_message(message.chat.id, '–ò–Ω—Ñ–∞ü§ñ', reply_markup=markup) 
#—Ñ—Ü–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –æ –±–æ—Ç–µ
        elif message.text == '–û –±–æ—Ç–µ':
                bot.send_message(message.chat.id, '–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∞, –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –≤–∏—Ä—É—Å –∫—Å—Ç–∞—Ç–∏)')

                
#—Ñ—É–Ω–∫—Ü–∏—è –∫–æ–Ω–ø–∫–∏ —á—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ
        elif message.text == '–ß—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ?':
                bot.send_message(message.chat.id, '–ù–∏—á–µ–≥–æ, –∞ —Ç—ã —á—Ç–æ –¥—É–º–∞–ª –º—ã –±–æ–≥–∞—Ç—ã–µ —á—Ç–æ–±—ã —á—Ç–æ-—Ç–æ —Ä–∞–∑–¥–∞–≤–∞—Ç—å??')

#—Ñ—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ 
        elif message.text == '–ù–∞–∑–∞–¥':
                markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
                item1 = types.KeyboardButton("–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤")
                item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∑")
                item3 = types.KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –¥–∑")
                item4 = types.KeyboardButton("–ò–Ω—Ñ–∞ü§ñ")

                markup.add(item1, item2, item3, item4)

                bot.send_message(message.chat.id, '–ù–∞–∑–∞–¥', reply_markup=markup)
#—Ñ—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Å—Ç–∏–∫–µ—Ä
        elif message.text == '–°—Ç–∏–∫–µ—Ä':
                stick = open('', 'rb')
                bot.send_sticker(message.chat.id, stick)

       #—Ñ—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∑
        elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∑':
             markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
             item1=types.KeyboardButton('–í—Å–µ –¥–∑(–ø–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ —Ç–∞–∫)')
             back = types.KeyboardButton("–ù–∞–∑–∞–¥")
             markup.add(item1, back)

             bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∑', reply_markup=markup)

        elif message.text == '–í—Å–µ –¥–∑(–ø–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ —Ç–∞–∫)':
             bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≥–æ—Ç–æ–≤–æ–≥–æ –¥/–∑')   
             

        elif message.text == '–ü–æ–ª—É—á–∏—Ç—å –¥–∑':
             markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
             item1=types.KeyboardButton('–í—Å–µ –¥–∑, –ø–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ —Ç–∞–∫(')
             back = types.KeyboardButton("–ù–∞–∑–∞–¥")
             markup.add(item1, back)
             connect = sqlite3.connect('dz.db')
             cursor = connect.cursor() 
             cursor.execute("""SELECT * FROM dz_id """)


bot.polling(none_stop=True)
